{"name":"Yelp4rails","tagline":"A gem that provides and activerecord like object for interacting with the yelp V2 api","body":"yelp4rails\r\n==========\r\n[![Gem Version](https://badge.fury.io/rb/yelp4rails.png)](http://badge.fury.io/rb/yelp4rails)\r\n[![Build Status](https://travis-ci.org/parabuzzle/yelp4rails.png?branch=master)](https://travis-ci.org/parabuzzle/yelp4rails)\r\n\r\nA gem that provides and ActiveRecord like object for interacting with the yelp V2 api\r\n\r\nWhy Yelp4Rails?\r\n---\r\nBecause working with an api should be no different that working with a database.\r\n\r\nNOTICE!\r\n---\r\nVersion 2 now supports the new Rails 4 style of query using the ```find_by(params_hash)``` method. This version is\r\nbackward compatible with Version 1.x.x but future versions will drop the ```search_by_term_and_location(:term, :location)```\r\nmeta programming style methods handling. \r\n\r\n\r\n**Consider Yourself Warned!**\r\n\r\n\r\nUsage\r\n---\r\n\trequire 'yelp4rails'\r\n\t\r\n\tkeys = {consumer_key: 'key', \r\n              consumer_secret: 'secret', \r\n              token: 'token', \r\n              token_secret: 'tsecret'}\r\n\tyelp = YelpApi.new(keys)\r\n\t\r\n\t## Search like its an active record model ##\r\n\t\t\r\n\t#search with term and location\r\n\tyelp.find_by(term: 'bar', location: 'San Francisco, CA')\r\n\t\r\n\t#search with term, location, and sort\r\n\tyelp.find_by(term: 'restaurant', location: 'San Francisco, CA', sort: '2')\r\n\t\r\n\t#search by business id\r\n\tyelp.find_by(business_id: 123)\r\n\t\r\n\t... you get the idea ;)\r\n\t\r\n\r\nsupported query params\r\n---\r\n * key, value, required?\r\n * term, string, optional\r\n * limit, number, optional\r\n * offset, number, optional\r\n * sort, string, optional\r\n   * Sort mode: 0=Best matched (default), 1=Distance, 2=Highest Rated.\r\n * category_filter, string, optional\r\n * radius_filter, number, optional\r\n * deals_filter, bool, optional  \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}